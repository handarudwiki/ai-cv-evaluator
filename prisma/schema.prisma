// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Document {
  id String @id @default(uuid())
  fileName String
  filePath String
  type DocumentType

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("documents")
}

model Result {
  id String @id @default(uuid())
  cvMatchRate Float
  cvFeedback String
  projectScore Float
  projectFeedback String
  overallSummary String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  evaluationJob EvaluationJob? @relation("JobResult")

  @@map("results")
}

model EvaluationJob { 
  id String @id @default(uuid())
  status EvaluationStatus
  jobTitle String
  cvDocumentId String
  reportDocumentId String
  resultId String? @unique
  error String?

  result Result? @relation("JobResult",fields: [resultId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("evaluation_jobs")
}

enum DocumentType {
  CV
  PROJECT_REPORT
  JOB_DESCRIPTION
  CASE_STUDY
  CV_RUBRIC
  PROJECT_RUBRIC
}

enum EvaluationStatus {
  QUEUED
  PROCESSING
  COMPLETED
  FAILED
}